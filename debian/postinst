#!/bin/sh
set -e

export PATH="/root/.local/bin:/root/.cargo/bin:$HOME/.local/bin:$HOME/.cargo/bin:/usr/local/bin:$PATH"

case "$1" in
configure)
	echo "Setting up Distiller CM5 SDK..."
	
	cd /opt/distiller-cm5-sdk
	
	# Verify uv is available
	if ! command -v uv >/dev/null 2>&1; then
		echo "ERROR: uv not found in PATH" >&2
		exit 1
	fi
	
	# Setup virtual environment
	[ -d ".venv" ] && rm -rf ".venv"
	rm -f uv.lock 2>/dev/null || true
	
	echo "Creating Python virtual environment..."
	if ! uv venv .venv; then
		echo "ERROR: Failed to create virtual environment" >&2
		exit 1
	fi
	
	# Install dependencies
	echo "Installing Python dependencies..."
	if ! uv sync; then
		echo "ERROR: Failed to install dependencies" >&2
		echo "Please check that required system packages are installed:" >&2
		echo "  - portaudio19-dev (for pyaudio)" >&2
		echo "  - build-essential (for native extensions)" >&2
		echo "  - pkg-config (for library detection)" >&2
		exit 1
	fi
	
	# Verify installation
	VENV_PYTHON="/opt/distiller-cm5-sdk/.venv/bin/python"
	if [ ! -f "$VENV_PYTHON" ]; then
		echo "ERROR: Virtual environment setup failed" >&2
		exit 1
	fi
	
	echo "Verifying SDK installation..."
	if ! "$VENV_PYTHON" -c "import distiller_cm5_sdk; print('SDK imported successfully')"; then
		echo "ERROR: SDK import failed" >&2
		exit 1
	fi
	
	# Create activation script
	cat > /opt/distiller-cm5-sdk/activate.sh << 'EOF'
#!/bin/bash
source /opt/distiller-cm5-sdk/.venv/bin/activate
export PYTHONPATH="/opt/distiller-cm5-sdk/src:$PYTHONPATH"
export LD_LIBRARY_PATH="/opt/distiller-cm5-sdk/lib:$LD_LIBRARY_PATH"
echo "Distiller CM5 SDK environment activated"
EOF
	chmod +x /opt/distiller-cm5-sdk/activate.sh
	
	# Create wrapper scripts for composer
	echo "Creating composer wrapper scripts..."
	
	# eink-compose CLI wrapper
	cat > /usr/local/bin/eink-compose << 'EOF'
#!/bin/bash
source /opt/distiller-cm5-sdk/activate.sh >/dev/null 2>&1
exec python -m distiller_cm5_sdk.hardware.eink.composer.cli "$@"
EOF
	chmod +x /usr/local/bin/eink-compose
	
	# eink-web FastAPI wrapper
	cat > /usr/local/bin/eink-web << 'EOF'
#!/bin/bash
source /opt/distiller-cm5-sdk/activate.sh >/dev/null 2>&1
exec uvicorn distiller_cm5_sdk.hardware.eink.composer.web_app:app \
    --host 0.0.0.0 --port 5000 "$@"
EOF
	chmod +x /usr/local/bin/eink-web
	
	# Install systemd service for web UI
	if [ -f /lib/systemd/system/eink-web.service ]; then
		systemctl daemon-reload
		echo "Systemd service 'eink-web' installed"
		echo "To start: systemctl start eink-web"
		echo "To enable on boot: systemctl enable eink-web"
	fi
	
	# Set permissions
	chown -R root:root /opt/distiller-cm5-sdk
	chmod -R 755 /opt/distiller-cm5-sdk
	
	# Update shared library cache
	ldconfig
	
	echo "Distiller CM5 SDK installed successfully"
	echo "To activate: source /opt/distiller-cm5-sdk/activate.sh"
	echo ""
	echo "Available commands:"
	echo "  eink-compose - E-ink composition CLI"
	echo "  eink-web - Start E-ink web UI server"
	;;

abort-upgrade | abort-remove | abort-deconfigure)
	;;

triggered)
	# Handle trigger activation - no action needed since main setup is done in configure
	;;

*)
	echo "postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

#DEBHELPER#

exit 0