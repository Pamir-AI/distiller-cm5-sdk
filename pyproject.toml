[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=61", "wheel" ]

[project]
name = "distiller-cm5-sdk"
version = "0.2.0"
readme = "README.md"
authors = [
  { name = "PamirAI Inc", email = "founders@pamir.ai" },
]
requires-python = ">=3.11"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "build>=1.3.0",
  "faster-whisper>=1.2.0",
  "opencv-python>=4.11.0.86",
  "pillow>=11.3.0",
  "pyaudio>=0.2.14",
  "pyserial>=3.5",
  "sherpa-onnx<1.12.7",
  "sounddevice>=0.5.2",
  "soundfile>=0.13.1",
  "spidev>=3.7",
  "fastapi>=0.116.1",
  "uvicorn[standard]>=0.35.0",
  "jinja2>=3.1.6",
  "python-multipart>=0.0.20",
  "numpy>=2.3.2",
  "qrcode[pil]>=8.2",
  "ruff>=0.12.9",
]

[project.scripts]
eink-compose = "distiller_cm5_sdk.hardware.eink.composer.cli:main"

[tool.setuptools.packages.find]
where = [ "src" ]

[tool.setuptools.package-data]
"distiller_cm5_sdk" = [
  "hardware/eink/lib/*.so",
  "hardware/eink/lib/*.h",
  "parakeet/models/*",
  "piper/models/*",
  "piper/piper/**/*",
  "hardware/audio/test_audio.wav",
  "hardware/eink/composer/templates/*.html",
  "hardware/eink/composer/templates/**/*.json",
  "hardware/eink/composer/static/**/*",
]

[tool.ruff]
line-length = 100
target-version = "py311"
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
lint.ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by formatter)
    "E722",  # bare `except`
    "F401",  # imported but unused
    "B904",
    "B008",  # function call in default argument (FastAPI Depends/File pattern)
]
lint.exclude = [
    ".venv",
    "build",
    "dist",
    "__pycache__",
    "*.egg-info",
    ".git",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.uv]
dev-dependencies = []
